// Margin & Padding 
@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        @each $prop,
        $abbrev in (margin: m, padding: p) {

            @each $size,
            $length in $spacers {
                .#{$abbrev}#{$infix}-#{$size} {
                    #{$prop}: $length !important;
                }

                .#{$abbrev}e#{$infix}-#{$size} {
                    #{$prop}-left: $length !important;
                    #{$prop}-right: 0 !important;
                }

                .#{$abbrev}s#{$infix}-#{$size} {
                    #{$prop}-right: $length !important;
                    #{$prop}-left: 0 !important;
                }
            }
        }

        // Negative margins (e.g., where `.mb-n1` is negative version of `.mb-1`)
        @each $size,
        $length in $spacers {
            @if $size !=0 {
                .me#{$infix}-n#{$size} {
                    margin-right: -$length !important;
                }
                
                .ms#{$infix}-n#{$size}{
                    margin-left: -$length !important;
                }
            }
        }

        .me#{$infix}-auto{
            margin-left: auto !important;
            margin-right: inherit !important;
        }

        .ms#{$infix}-auto {
            margin-right: auto !important;
            margin-left: 0 !important;
        }
    }
}

// Responsive alignment
@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .text#{$infix}-start {
            text-align: right !important;
        }

        .text#{$infix}-end {
            text-align: left !important;
        }

        .text#{$infix}-center {
            text-align: center !important;
        }

    }
}

// Float
@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .float#{$infix}-start {
            float: right !important;
        }

        .float#{$infix}-end {
            float: left !important;
        }

        .float#{$infix}-none {
            float: none !important;
        }
    }
}

ol,
ul {
    padding-right: 2rem;
    padding-left: auto;
}

.list-unstyled {
    padding-right: 0; 
}

.navbar-nav { 
    padding-right: 0;
}

// breadcrumb

.breadcrumb-item {
    + .breadcrumb-item{
        padding-left: 0;
        padding-right: var(--#{$prefix}breadcrumb-item-padding-x);
        &::before {
            float: right;
            padding-right: 0;
            padding-left: var(--#{$prefix}breadcrumb-item-padding-x);
        }
    }
}

//dropdown

.dropdown-menu{
    right: 0 !important;
    left: auto !important;
    text-align: right;
}

.dropdown-menu-end{
    left: 0 !important;
    right: auto !important;
}


//offcanvas
.offcanvas{
    &.offcanvas-end {
        left: 0; 
        right: auto; 
        transform: translateX(-100%);
    }
    &.offcanvas-start {
        right: 0;
        left: auto;
        transform: translateX(100%);
    }
}



//alert
.alert-dismissible {
    padding-left: 3rem;
    padding-right: $accordion-padding-x;
    .btn-close {
        left: 0;
        right: auto;
    }
}

.alert-border-left {
    border: var(--#{$prefix}alert-border);
    border-right: 3px solid;
}
@each $state in map-keys($theme-colors) {
    .alert-border-left.alert-#{$state} {
        border-color: var(--#{$prefix}alert-border-color);
    }
}

.alert-label-icon {
    padding-left: 3rem;
    padding-right: 60px;
    .label-icon {
        left: auto;
        right: 0;
    }

    &.label-arrow{
        .label-icon:after{
            border-left-color: transparent !important;
            border-right-color: $primary;
            right: auto;
            left: -12px;
        }
    }
}

.alert-additional{
    padding: 0;
}

.rounded-label{
    .label-icon{
        border-radius: 30px 0 0 30px;
    }
}

@each $color, $value in $theme-colors {
    .alert-border-left {
        &.alert-#{$color} {
            border-right-color: $value;
        }
    }

    // label arrow

    .label-arrow {
        &.alert-#{$color} {
            .label-icon {
                &:after {
                    border-right-color: $value !important;
                }
            }
        }
    }
}


// btn group

.btn-group > .btn:nth-child(n+3), 
.btn-group > :not(.btn-check) + .btn, 
.btn-group > .btn-group:not(:first-child) > .btn{
    border-top-left-radius: var(--#{$prefix}btn-border-radius);
    border-bottom-left-radius: var(--#{$prefix}btn-border-radius);
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

.btn-group > .btn:not(:last-child):not(.dropdown-toggle), 
.btn-group > .btn.dropdown-toggle-split:first-child, 
.btn-group > .btn-group:not(:last-child) > .btn{
    border-top-right-radius: var(--#{$prefix}btn-border-radius);
    border-bottom-right-radius: var(--#{$prefix}btn-border-radius);
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}


// nav pills
.nav{
    padding-right: 0;
}
.custom-verti-nav-pills{
    .nav-link{
        &:before{
            right: auto;
            left: -20px;
        }
        @media (min-width: 992px) {
            &.active::before{
                border-left-color: transparent;
                border-right-color: $primary;
            }
        }
    }
}

.step-arrow-nav {
    .nav{
        .nav-link{
            &::before{
                right: auto;
                left: -14px;
            }
            &.active{
                &::before{
                    border-left-color: transparent;
                    border-right-color: rgba($primary, 0.1);
                }
            }
        }
    }
}


// accordion
.accordion-button::after {
    margin-right: auto;
    margin-left: 0;
}
.custom-accordion-border {
    .accordion-item{
        border-left: 1px solid $accordion-border-color;
        border-right: 3px solid $accordion-border-color;
    }
}

//accordion Color 
@each $color,
$value in $theme-colors {
    .accordion-#{$color} {
        .accordion-item {
            border-color: rgba($value, 0.6);
        }
    }
}

// modal
.modal-header {
    .btn-close{
        margin-left: 0;
    }
}

// positions

.start-0{
    left: auto !important;
    right: 0;
}

.start-50{
    left: auto !important;
    right: 50% !important;
}

.start-100{
    left: auto !important;
    right: 100% !important;
}

.end-0{
    right: auto !important;
    left: 0;
}

.translate-middle{
    transform: translate(50%, -50%) !important;
}

// progress

.progress-step-arrow {
    .progress-bar::after{
        left: -20px;
        right: auto;
        border-left-color: transparent !important;
    }
}

@mixin progress-variant($bg) {
    .progress-bar {
        &::after { 
            border-right-color: $bg;
        }
        &:nth-child(2) {
            &::after { 
                border-right-color: rgba($bg, 0.1);
            }
        }
    }
}

@each $color, $value in $theme-colors {
    .progress-#{$color} {
        @include progress-variant($value);
    }
}

// toast
.toast-header {
    .btn-close{
        margin-left: calc(-.5 * var(--#{$prefix}toast-padding-x)); // stylelint-disable-line function-disallowed-list
        margin-right: var(--#{$prefix}toast-padding-x);
    }
}

// blockquote
.custom-blockquote.blockquote{
    border-left: 0;
    border-right: 3px solid;
}

.custom-blockquote.blockquote.blockquote-outline{
    border-left: 1px solid;
    border-right: 3px solid;
}

// list

.list-inline, .list-group{
    padding-right: 0;
}

dd{
    margin-right: 0;
}


// pagination

.pagination{
    padding-right: 0;
}

.page-item {
    &:not(:first-child) .page-link {
      margin-left: 0;
      margin-right: $pagination-margin-start;
    }
}

// Pagination Separated
.pagination-separated {
    .page-item {
        .page-link {
            margin-right: 0.35rem;
            margin-left: 0;
        }
    }
}



// form components

// input-group

.input-group {
    &:not(.has-validation) {
        > :not(:last-child):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating),
        > .dropdown-toggle:nth-last-child(n + 3),
        > .form-floating:not(:last-child) > .form-control,
        > .form-floating:not(:last-child) > .form-select {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
            border-top-right-radius: $input-border-radius;
            border-bottom-right-radius: $input-border-radius;
        }
    }

    > :not(:first-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback){
        margin-left: 0;
        margin-right: calc(#{$input-border-width} * -1);
        border-top-left-radius: $input-border-radius;
        border-bottom-left-radius: $input-border-radius;
        border-top-right-radius:0;
        border-bottom-right-radius:0;
    }
}

.form-select{
    padding: $form-select-padding-y $form-select-padding-x $form-select-padding-y $form-select-indicator-padding;
    background-position: left .9rem center;
}


// checkbox

.form-check-inline {
    margin-right: 0;
    margin-left: $form-check-inline-margin-end;
  }

.form-check{
    text-align: right;
    padding-left: 0;
    padding-right: $form-check-padding-start;
    .form-check-input {
        float: right;
        margin-left:0;
        margin-right: $form-check-padding-start * -1;
    }
}

// checkbox input right
.form-check-right {
    padding-right: 0;

    .form-check-input {
        float: left;
        margin-right: 0;
        margin-left: $form-check-padding-start * -1;
    }


    &.form-switch {
        .form-check-input {
            margin-left: $form-check-padding-start * -1.6;
            margin-right: 0;
        }
    }
}

// Switch

.form-switch {
    padding-left: 0;
    padding-right: $form-switch-padding-start;

    .form-check-input {
        margin-left: 0;
        margin-right: $form-switch-padding-start * -1;
    }

    &.form-check-reverse {
        padding-left: $form-switch-padding-start;
        padding-right: 0;
    
        .form-check-input {
          margin-left: $form-switch-padding-start * -1;
          margin-right: 0;
        }
    }
}

// Switch sizes

.form-switch-md {
    padding-left: 0;
    padding-right: 2.5rem;

    .form-check-input {
        left: auto;
        right: -0.5rem;
    }
}

.form-switch-lg {
    padding-left: 0;
    padding-right: 2.75rem;

    .form-check-input {
        left: auto;
        right: -0.75rem;
    }
}


